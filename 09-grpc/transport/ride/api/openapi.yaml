openapi: 3.0.3
info:
  title: Ride Assignment API
  version: 1.0.0
  description: >
    API for creating and retrieving ride assignments.
    Once published, fields and semantics must remain stable.

servers:
  - url: https://api.city-transport.com/v1

paths:
  /assignments:
    post:
      summary: Create a new assignment
      operationId: createAssignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAssignment'
      responses:
        '201':
          description: Assignment created
          headers:
            Location:
              description: URL of the created assignment
              schema: { type: string, format: uri }
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Assignment' }
        '400': { $ref: '#/components/responses/BadRequest' }
        '404': { $ref: '#/components/responses/NotFound' }

    get:
      summary: List all assignments
      operationId: listAssignments
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, active, completed]
      responses:
        '200':
          description: List of assignments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'

  /assignments/{id}:
    get:
      summary: Get a single assignment
      operationId: getAssignment
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Assignment found
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Assignment' }
        '404': { $ref: '#/components/responses/NotFound' }

components:
  schemas:
    EntityMetadata:
      type: object
      properties:
        id: { type: string }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }

    NewAssignment:
      type: object
      required: [vehicleId, routeId, startsAt]
      properties:
        vehicleId: { type: string }
        routeId: { type: string }
        startsAt: { type: string, format: date-time }

    Assignment:
      allOf:
        - $ref: '#/components/schemas/EntityMetadata'
        - type: object
          required: [vehicleId, routeId, startsAt, status]
          properties:
            vehicleId: { type: string }
            routeId: { type: string }
            startsAt: { type: string, format: date-time }
            status:
              type: string
              enum: [pending, active, completed]

  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              error: { type: string }
              details: { type: string }
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error: { type: string }