// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: vehicle.proto

package vehiclepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=routeId,proto3" json:"routeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRequest) Reset() {
	*x = FindRequest{}
	mi := &file_vehicle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest) ProtoMessage() {}

func (x *FindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vehicle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest.ProtoReflect.Descriptor instead.
func (*FindRequest) Descriptor() ([]byte, []int) {
	return file_vehicle_proto_rawDescGZIP(), []int{0}
}

func (x *FindRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

type FindResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VehicleId     string                 `protobuf:"bytes,1,opt,name=vehicleId,proto3" json:"vehicleId,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // available, maintenance, assigned
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindResponse) Reset() {
	*x = FindResponse{}
	mi := &file_vehicle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindResponse) ProtoMessage() {}

func (x *FindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vehicle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindResponse.ProtoReflect.Descriptor instead.
func (*FindResponse) Descriptor() ([]byte, []int) {
	return file_vehicle_proto_rawDescGZIP(), []int{1}
}

func (x *FindResponse) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *FindResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type InfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VehicleId     string                 `protobuf:"bytes,1,opt,name=vehicleId,proto3" json:"vehicleId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	mi := &file_vehicle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vehicle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_vehicle_proto_rawDescGZIP(), []int{2}
}

func (x *InfoRequest) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

type InfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VehicleId     string                 `protobuf:"bytes,1,opt,name=vehicleId,proto3" json:"vehicleId,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // bus, tram, taxi
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	mi := &file_vehicle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vehicle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_vehicle_proto_rawDescGZIP(), []int{3}
}

func (x *InfoResponse) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *InfoResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InfoResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AssignmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssignmentId  string                 `protobuf:"bytes,1,opt,name=assignmentId,proto3" json:"assignmentId,omitempty"`
	VehicleId     string                 `protobuf:"bytes,2,opt,name=vehicleId,proto3" json:"vehicleId,omitempty"`
	RouteId       string                 `protobuf:"bytes,3,opt,name=routeId,proto3" json:"routeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignmentRequest) Reset() {
	*x = AssignmentRequest{}
	mi := &file_vehicle_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentRequest) ProtoMessage() {}

func (x *AssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vehicle_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentRequest.ProtoReflect.Descriptor instead.
func (*AssignmentRequest) Descriptor() ([]byte, []int) {
	return file_vehicle_proto_rawDescGZIP(), []int{4}
}

func (x *AssignmentRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *AssignmentRequest) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *AssignmentRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

type AssignmentAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssignmentId  string                 `protobuf:"bytes,1,opt,name=assignmentId,proto3" json:"assignmentId,omitempty"`
	Accepted      bool                   `protobuf:"varint,2,opt,name=accepted,proto3" json:"accepted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignmentAck) Reset() {
	*x = AssignmentAck{}
	mi := &file_vehicle_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignmentAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentAck) ProtoMessage() {}

func (x *AssignmentAck) ProtoReflect() protoreflect.Message {
	mi := &file_vehicle_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentAck.ProtoReflect.Descriptor instead.
func (*AssignmentAck) Descriptor() ([]byte, []int) {
	return file_vehicle_proto_rawDescGZIP(), []int{5}
}

func (x *AssignmentAck) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *AssignmentAck) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

var File_vehicle_proto protoreflect.FileDescriptor

const file_vehicle_proto_rawDesc = "" +
	"\n" +
	"\rvehicle.proto\x12\tvehiclepb\"'\n" +
	"\vFindRequest\x12\x18\n" +
	"\arouteId\x18\x01 \x01(\tR\arouteId\"D\n" +
	"\fFindResponse\x12\x1c\n" +
	"\tvehicleId\x18\x01 \x01(\tR\tvehicleId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"+\n" +
	"\vInfoRequest\x12\x1c\n" +
	"\tvehicleId\x18\x01 \x01(\tR\tvehicleId\"X\n" +
	"\fInfoResponse\x12\x1c\n" +
	"\tvehicleId\x18\x01 \x01(\tR\tvehicleId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"o\n" +
	"\x11AssignmentRequest\x12\"\n" +
	"\fassignmentId\x18\x01 \x01(\tR\fassignmentId\x12\x1c\n" +
	"\tvehicleId\x18\x02 \x01(\tR\tvehicleId\x12\x18\n" +
	"\arouteId\x18\x03 \x01(\tR\arouteId\"O\n" +
	"\rAssignmentAck\x12\"\n" +
	"\fassignmentId\x18\x01 \x01(\tR\fassignmentId\x12\x1a\n" +
	"\baccepted\x18\x02 \x01(\bR\baccepted2\xed\x01\n" +
	"\x0eVehicleService\x12G\n" +
	"\x14FindAvailableVehicle\x12\x16.vehiclepb.FindRequest\x1a\x17.vehiclepb.FindResponse\x12A\n" +
	"\x0eGetVehicleInfo\x12\x16.vehiclepb.InfoRequest\x1a\x17.vehiclepb.InfoResponse\x12O\n" +
	"\x11StreamAssignments\x12\x1c.vehiclepb.AssignmentRequest\x1a\x18.vehiclepb.AssignmentAck(\x010\x01B;Z9github.com/yourname/transport/vehicle/vehiclepb;vehiclepbb\x06proto3"

var (
	file_vehicle_proto_rawDescOnce sync.Once
	file_vehicle_proto_rawDescData []byte
)

func file_vehicle_proto_rawDescGZIP() []byte {
	file_vehicle_proto_rawDescOnce.Do(func() {
		file_vehicle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vehicle_proto_rawDesc), len(file_vehicle_proto_rawDesc)))
	})
	return file_vehicle_proto_rawDescData
}

var file_vehicle_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_vehicle_proto_goTypes = []any{
	(*FindRequest)(nil),       // 0: vehiclepb.FindRequest
	(*FindResponse)(nil),      // 1: vehiclepb.FindResponse
	(*InfoRequest)(nil),       // 2: vehiclepb.InfoRequest
	(*InfoResponse)(nil),      // 3: vehiclepb.InfoResponse
	(*AssignmentRequest)(nil), // 4: vehiclepb.AssignmentRequest
	(*AssignmentAck)(nil),     // 5: vehiclepb.AssignmentAck
}
var file_vehicle_proto_depIdxs = []int32{
	0, // 0: vehiclepb.VehicleService.FindAvailableVehicle:input_type -> vehiclepb.FindRequest
	2, // 1: vehiclepb.VehicleService.GetVehicleInfo:input_type -> vehiclepb.InfoRequest
	4, // 2: vehiclepb.VehicleService.StreamAssignments:input_type -> vehiclepb.AssignmentRequest
	1, // 3: vehiclepb.VehicleService.FindAvailableVehicle:output_type -> vehiclepb.FindResponse
	3, // 4: vehiclepb.VehicleService.GetVehicleInfo:output_type -> vehiclepb.InfoResponse
	5, // 5: vehiclepb.VehicleService.StreamAssignments:output_type -> vehiclepb.AssignmentAck
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_vehicle_proto_init() }
func file_vehicle_proto_init() {
	if File_vehicle_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vehicle_proto_rawDesc), len(file_vehicle_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vehicle_proto_goTypes,
		DependencyIndexes: file_vehicle_proto_depIdxs,
		MessageInfos:      file_vehicle_proto_msgTypes,
	}.Build()
	File_vehicle_proto = out.File
	file_vehicle_proto_goTypes = nil
	file_vehicle_proto_depIdxs = nil
}
